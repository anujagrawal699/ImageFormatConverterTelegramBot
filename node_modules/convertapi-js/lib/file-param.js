export class FileValue {
    constructor(name, fileId) {
        this.name = name;
        this.fileId = fileId;
    }
}
export default class FileParam {
    constructor(name, file, host) {
        this.name = name;
        this.file = file;
        this.host = host;
    }
    value() {
        if (this.file instanceof FileValue) {
            return Promise.resolve(this.file.fileId);
        }
        else {
            let uploadUrl = `https://${this.host}/upload?`;
            let response = this.file instanceof URL
                ? fetch(`${uploadUrl}url=${this.file.href}`, { method: 'POST' })
                : fetch(`${uploadUrl}filename=${this.file.name}`, { method: 'POST', body: this.file });
            return response.then(r => r.json()).then(obj => obj.FileId);
        }
    }
    get dto() {
        return this.value().then(v => ({
            Name: this.name,
            FileValue: { Id: v }
        }));
    }
}
//# sourceMappingURL=file-param.js.map