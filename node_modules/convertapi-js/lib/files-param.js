import FileParam, { FileValue } from "./file-param";
export class FilesValue {
    constructor(files) {
        this.files = files;
    }
    asArray() {
        return this.files.map(f => new FileValue(f.FileName, f.FileId));
    }
}
export default class FilesParam {
    constructor(name, files, host) {
        this.name = name;
        this.fileValPros = [];
        if (files instanceof FileList) {
            this.fileValPros = Array.from(files).map(f => new FileParam(name, f, host).value().then(i => ({
                Id: i
            })));
        }
        else if (files instanceof FilesValue) {
            this.fileValPros = files.asArray().map(f => Promise.resolve({
                Id: f.fileId
            }));
        }
        else {
            this.fileValPros = files.map(f => Promise.resolve(f instanceof URL ? { Url: f.href } : { Id: f }));
        }
    }
    get dto() {
        return Promise.all(this.fileValPros).then(fv => ({
            Name: this.name,
            FileValues: fv
        }));
    }
}
//# sourceMappingURL=files-param.js.map